# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kustomizer < Formula
  desc "Kustomizer CLI"
  homepage "https://kustomizer.dev/"
  version "2.0.0-rc.3"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.0.0-rc.3/kustomizer_2.0.0-rc.3_darwin_amd64.tar.gz"
      sha256 "e9b5bb91a03b484a5bef7174a2440aafa5524ad4dac958d91187cdf120ec0f43"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.0.0-rc.3/kustomizer_2.0.0-rc.3_darwin_arm64.tar.gz"
      sha256 "877f84b52d8b77e159e790f766267817aad858af7fdf96ad426cfa235e9eda72"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.0.0-rc.3/kustomizer_2.0.0-rc.3_linux_amd64.tar.gz"
      sha256 "3740c46c150f764fa0b13372f627f4523da01c727bda67efbbbac8dc8b87edc1"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.0.0-rc.3/kustomizer_2.0.0-rc.3_linux_arm64.tar.gz"
      sha256 "68a0aed9ced128cb3a5b5c4a128ccce3913a9866a803b52aa5dcfc1eab274cde"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
  end

  depends_on "diffutils" => :optional

  test do
    system "#{bin}/kustomizer --version"
  end
end
