# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kustomizer < Formula
  desc "Kustomizer CLI"
  homepage "https://kustomizer.dev/"
  version "2.1.3"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.1.3/kustomizer_2.1.3_darwin_arm64.tar.gz"
      sha256 "eb73bce43e64618f5485922644549d7373a07ce5dd3bd412162790e0ca3178bc"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.1.3/kustomizer_2.1.3_darwin_amd64.tar.gz"
      sha256 "e545a11393b36b3d06a2b79d73d802e97e1e5e1e19a5791df25083831c4e63aa"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.1.3/kustomizer_2.1.3_linux_amd64.tar.gz"
      sha256 "be8b4de4f86f70decff3e205e1d6a77f1e25699ebe3dfda0591689ad70f44b86"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.1.3/kustomizer_2.1.3_linux_arm64.tar.gz"
      sha256 "af3166f5b9d4599757c4d5f7bdffb0eb68cec211c796a1a64a89861bee0fdcac"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
  end

  depends_on "cosign"
  depends_on "diffutils" => :optional

  test do
    system "#{bin}/kustomizer --version"
  end
end
