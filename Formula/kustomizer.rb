# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kustomizer < Formula
  desc "Kustomizer CLI"
  homepage "https://kustomizer.dev/"
  version "2.0.0-rc.5"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.0.0-rc.5/kustomizer_2.0.0-rc.5_darwin_amd64.tar.gz"
      sha256 "7265cdc7f4a081c9f7b4a290a40fed74673319c3c6107f6752f1293748314b14"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.0.0-rc.5/kustomizer_2.0.0-rc.5_darwin_arm64.tar.gz"
      sha256 "1ee13be2ea89e623f0d5689d379c1926f4f3251f1fee52458a3dcca7b846d468"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.0.0-rc.5/kustomizer_2.0.0-rc.5_linux_amd64.tar.gz"
      sha256 "f4e4e796c36d00aadff3419a27a1be656d172c78340937de5387d2732676d36d"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.0.0-rc.5/kustomizer_2.0.0-rc.5_linux_arm64.tar.gz"
      sha256 "0a13cfb3e1b512e207432f57f2b2b3175a00a4606eb218feda0b36ca952e9ed6"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
  end

  depends_on "diffutils" => :optional

  test do
    system "#{bin}/kustomizer --version"
  end
end
