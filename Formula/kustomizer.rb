# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kustomizer < Formula
  desc "Kustomizer CLI"
  homepage "https://kustomizer.dev/"
  version "2.1.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.1.0/kustomizer_2.1.0_darwin_amd64.tar.gz"
      sha256 "c2ffa87c781e15455bb5d63f2725b3f7c2416003c7db41dfc4a1afc75d0b8361"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.1.0/kustomizer_2.1.0_darwin_arm64.tar.gz"
      sha256 "2bbc47d1a9659cbd4cdde54ec23181728944e8da42f9dd1b3b0626fa3e80f2a0"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.1.0/kustomizer_2.1.0_linux_amd64.tar.gz"
      sha256 "b7afb0e74d6a8c511801caf66b1dc25c475fbb0565bcfd89cf3a1a5b778e78ca"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/stefanprodan/kustomizer/releases/download/v2.1.0/kustomizer_2.1.0_linux_arm64.tar.gz"
      sha256 "d3372cf8f1393d9a43f8421324989a18c70b8ee23f5832a35e62f6b3485b4f14"

      def install
        bin.install "kustomizer"
        bash_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "bash")
        (bash_completion/"kustomizer").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "zsh")
        (zsh_completion/"_kustomizer").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"kustomizer", "completion", "fish")
        (fish_completion/"kustomizer.fish").write fish_output
      end
    end
  end

  depends_on "cosign"
  depends_on "diffutils" => :optional

  test do
    system "#{bin}/kustomizer --version"
  end
end
