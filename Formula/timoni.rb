# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Timoni < Formula
  desc "Timoni CLI"
  homepage "https://timoni.sh"
  version "0.23.0"

  depends_on "cue" => :optional
  depends_on "diffutils" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/timoni/releases/download/v0.23.0/timoni_0.23.0_darwin_amd64.tar.gz"
      sha256 "fe885c223c7f0fe0d032a1c8f74588694f23612cb54de7d97f5c4dc5ccc95e6f"

      def install
        bin.install "timoni"
        bash_output = Utils.safe_popen_read(bin/"timoni", "completion", "bash")
        (bash_completion/"timoni").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"timoni", "completion", "zsh")
        (zsh_completion/"_timoni").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"timoni", "completion", "fish")
        (fish_completion/"timoni.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/stefanprodan/timoni/releases/download/v0.23.0/timoni_0.23.0_darwin_arm64.tar.gz"
      sha256 "d87a6e916283d1379d32c43c55e38cdf3d9347dc4c93cf52edd2d50a5ca8dfac"

      def install
        bin.install "timoni"
        bash_output = Utils.safe_popen_read(bin/"timoni", "completion", "bash")
        (bash_completion/"timoni").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"timoni", "completion", "zsh")
        (zsh_completion/"_timoni").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"timoni", "completion", "fish")
        (fish_completion/"timoni.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/stefanprodan/timoni/releases/download/v0.23.0/timoni_0.23.0_linux_amd64.tar.gz"
        sha256 "da2972b0cfaf121764b28bd4a7cfb34ac1521b287f3a91c2e48d1775b7e53fd5"

        def install
          bin.install "timoni"
          bash_output = Utils.safe_popen_read(bin/"timoni", "completion", "bash")
          (bash_completion/"timoni").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"timoni", "completion", "zsh")
          (zsh_completion/"_timoni").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"timoni", "completion", "fish")
          (fish_completion/"timoni.fish").write fish_output
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/stefanprodan/timoni/releases/download/v0.23.0/timoni_0.23.0_linux_arm64.tar.gz"
        sha256 "39787509fb8a5f9ff1cb8aa19b2c65f8cf8f12d2ee0d659681080b4821c9753f"

        def install
          bin.install "timoni"
          bash_output = Utils.safe_popen_read(bin/"timoni", "completion", "bash")
          (bash_completion/"timoni").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"timoni", "completion", "zsh")
          (zsh_completion/"_timoni").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"timoni", "completion", "fish")
          (fish_completion/"timoni.fish").write fish_output
        end
      end
    end
  end

  test do
    system "#{bin}/timoni version"
  end
end
