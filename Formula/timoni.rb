# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Timoni < Formula
  desc "Timoni CLI"
  homepage "https://timoni.sh"
  version "0.24.0"

  depends_on "cue" => :optional
  depends_on "diffutils" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/stefanprodan/timoni/releases/download/v0.24.0/timoni_0.24.0_darwin_amd64.tar.gz"
      sha256 "5e5e58d4acf6b2d99b4bce0c4fb03b27c5d25c7be8c620b68a985e889f9f75dd"

      def install
        bin.install "timoni"
        bash_output = Utils.safe_popen_read(bin/"timoni", "completion", "bash")
        (bash_completion/"timoni").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"timoni", "completion", "zsh")
        (zsh_completion/"_timoni").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"timoni", "completion", "fish")
        (fish_completion/"timoni.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/stefanprodan/timoni/releases/download/v0.24.0/timoni_0.24.0_darwin_arm64.tar.gz"
      sha256 "38034f8ff71820b3ea89d1d971f4ed963160f643fa6c3b97c1d60091f4526fef"

      def install
        bin.install "timoni"
        bash_output = Utils.safe_popen_read(bin/"timoni", "completion", "bash")
        (bash_completion/"timoni").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"timoni", "completion", "zsh")
        (zsh_completion/"_timoni").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"timoni", "completion", "fish")
        (fish_completion/"timoni.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/stefanprodan/timoni/releases/download/v0.24.0/timoni_0.24.0_linux_amd64.tar.gz"
        sha256 "f6c8ce38849364218e2f470f19da2f0af1530f88e78aa9a3437a9af1e9beb2e5"

        def install
          bin.install "timoni"
          bash_output = Utils.safe_popen_read(bin/"timoni", "completion", "bash")
          (bash_completion/"timoni").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"timoni", "completion", "zsh")
          (zsh_completion/"_timoni").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"timoni", "completion", "fish")
          (fish_completion/"timoni.fish").write fish_output
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/stefanprodan/timoni/releases/download/v0.24.0/timoni_0.24.0_linux_arm64.tar.gz"
        sha256 "058128a2071907f3bb45f5fa48a6efe3ccd1d4eeac2cae4d9bee80ff8959b4e5"

        def install
          bin.install "timoni"
          bash_output = Utils.safe_popen_read(bin/"timoni", "completion", "bash")
          (bash_completion/"timoni").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"timoni", "completion", "zsh")
          (zsh_completion/"_timoni").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"timoni", "completion", "fish")
          (fish_completion/"timoni.fish").write fish_output
        end
      end
    end
  end

  test do
    system "#{bin}/timoni version"
  end
end
